{"version":3,"sources":["components/Dashboard.js","components/Form.js","components/Display.js","components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","res","setState","pets","sort","data","catch","err","console","log","state","arr","a","b","typeA","type","toUpperCase","typeB","react_default","createElement","className","href","map","pet","key","_id","name","react_router_dom","to","concat","Component","Form","change","e","p","objectSpread","target","value","create","preventDefault","post","errors","history","push","description","skillOne","skillTwo","skillThree","likes","onSubmit","onChange","bind","message","Display","match","params","like","st","liked","put","adopt","delete","onClick","disabled","Edit","update","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3115c70c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pets: []\n        }\n    }\n\n    sort(arr) {\n        arr.sort(function (a, b) {\n            var typeA = a.type.toUpperCase();\n            var typeB = b.type.toUpperCase();\n            if (typeA < typeB) {\n                return -1;\n            }\n            if (typeA > typeB) {\n                return 1;\n            }\n            return 0;\n        });\n        return arr;\n    }\n\n    componentDidMount = () => {\n        axios.get('/api/pets')\n            .then(res => {\n                this.setState({pets: this.sort(res.data.pets)});\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n    render() {\n        return (\n            <div>\n                <h1 className=\"mb-5 mt-5\">These pets are looking for a home!</h1>\n                <a href=\"/new\">Add a pet to the shelter</a>\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.pets.map( pet => \n                                <tr key={pet._id}>\n                                    <td>{pet.name}</td>\n                                    <td>{pet.type}</td>\n                                    <td>\n                                        <Link to={`/pet/${pet._id}`} className=\"btn btn-outline-primary mr-3\">Details</Link>\n                                        <Link to={`/pet/${pet._id}/edit`}className=\"btn btn-outline-success\">Edit</Link>\n                                    </td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {\n                name: \"\",\n                type: \"\",\n                description: \"\",\n                skillOne: \"\",\n                skillTwo: \"\",\n                skillThree: \"\",\n                likes: 0\n            },\n            errors: {}\n        }\n    }\n\n    change = (key, e) => {\n        let p = { ...this.state.pet };\n        p[key] = e.target.value;\n        this.setState({ pet: p });\n    }\n\n    create = (e) => {\n        e.preventDefault();\n        axios.post(\"/api/create\", this.state.pet)\n        .then(res => {\n            if(res.data.errors) {\n                console.log(res.data.errors);\n                this.setState({errors: res.data.errors.errors});\n            } else {\n                this.props.history.push(\"/\");\n            }\n        });\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"mb-5 mt-5\">Know of a pet needing a home?</h1>\n                <div className=\"border border-dark p-3\">\n                    <form onSubmit={this.create}>\n                        <div className=\"form-group\">\n                            <label>Pet Name:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={this.change.bind(this, \"name\")} />\n                            {\n                                this.state.errors.name ?\n                                    <p>{this.state.errors.name.message}</p> : \n                                    \"\"\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Pet Type:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={this.change.bind(this, \"type\")} />\n                            {\n                                this.state.errors.type ?\n                                    <p>{this.state.errors.type.message}</p> : \n                                    \"\"\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={this.change.bind(this, \"description\")} />\n                            {\n                                this.state.errors.description ?\n                                    <p>{this.state.errors.description.message}</p> : \n                                    \"\"\n                            }\n                        </div>\n                        <div>\n                            <label>Skills:</label>\n                            <div className=\"form-group\">\n                                <p>Skill 1:</p>\n                                <input type=\"text\" onChange={this.change.bind(this, \"skillOne\")} />\n                            </div>\n                            <div className=\"form-group\">\n                                <p>Skill 2:</p>\n                                <input type=\"text\" onChange={this.change.bind(this, \"skillTwo\")} />\n                            </div>\n                            <div className=\"form-group\">\n                                <p>Skill 3:</p>\n                                <input type=\"text\" onChange={this.change.bind(this, \"skillThree\")} />\n                            </div>\n                        </div>\n                        <input type=\"submit\" className=\"btn btn-success mr-3\"/>\n                        <Link to={\"/\"} className=\"btn btn-danger\">Cancel</Link>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Form\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Display extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {},\n            liked: false\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`/api/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.setState({\n                    pet: res.data.pet\n                });\n            })\n    }\n\n    like = () => {\n        let st = { ...this.state }\n        st.liked = true;\n        st.pet.likes += 1;\n        this.setState(st);\n        axios.put(`/api/pets/${this.props.match.params._id}`, this.state.pet)\n            .then(res => {\n                this.componentDidMount();\n            })\n    }\n\n    adopt = () => {\n        axios.delete(`/api/pets/${this.props.match.params._id}`)\n            .then(res => {\n                if (res.data.errors) {\n                    console.log(res.data.errors.errors);\n                } else {\n                    this.props.history.push(\"/\");\n                }\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"mt-5 mb-5\">Pet Shelter</h1>\n                <h1 className=\"mb-5\">Details about {this.state.pet.name}</h1>\n                <Link to={\"/\"} className=\"btn btn-primary mb-5\">Home</Link>\n                <div>\n                    <div>\n                        <h3>Pet Type:</h3> <p>{this.state.pet.type}</p>\n                    </div>\n                    <div>\n                        <h3>Description:</h3> <p>{this.state.pet.description}</p>\n                    </div>\n                    <div>\n                        <h3>Skills:</h3>\n                        <div>\n                            <li>{this.state.pet.skillOne}</li>\n                            <li>{this.state.pet.skillTwo}</li>\n                            <li>{this.state.pet.skillThree}</li>\n                        </div>\n                    </div>\n                    <div className=\"mb-5\">\n                        <h3>Likes:</h3>\n                        <p className=\"mb-5\">{this.state.pet.likes}</p>\n                        {this.state.liked ?\n                            <button onClick={this.like.bind(this)} className=\"btn btn-dark\" disabled>Like this pet</button> :\n                            <button onClick={this.like.bind(this)} className=\"btn btn-info\">Like this pet</button>\n                        }\n                    </div>\n                    <div>\n                        <button onClick={this.adopt.bind(this)} className=\"btn btn-warning\">Adopt this pet</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Display","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\n\nclass Edit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pet: {\n                name: \"\",\n                type: \"\",\n                description: \"\",\n                skillOne: \"\",\n                skillTwo: \"\",\n                skillThree: \"\"\n            },\n            errors: {}\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`/api/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.setState({ pet: res.data.pet });\n            })\n    }\n\n    change = (key, e) => {\n        let p = { ...this.state.pet };\n        p[key] = e.target.value;\n        this.setState({ pet: p });\n    }\n\n    update = (e) => {\n        e.preventDefault();\n        axios.put(`/api/pets/${this.state.pet._id}`, this.state.pet)\n            .then(res => {\n                if (res.data.errors) {\n                    this.setState({ errors: res.data.errors.errors })\n                } else {\n                    this.props.history.push(\"/\");\n                }\n            });\n    }\n\n\n    render() {\n         return (\n             <div>\n                 <div className=\"border border-dark p-3 mb-5 mt-5\">\n                    <form onSubmit={this.update}>\n                        <div className=\"form-group\">\n                            <label>Pet Name:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={this.change.bind(this, \"name\")} value={this.state.pet.name}/>\n                            {\n                                this.state.errors.name ?\n                                    <p>{this.state.errors.name.message}</p> :\n                                    \"\"\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Pet Type:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={this.change.bind(this, \"type\")} value={this.state.pet.type}/>\n                            {\n                                this.state.errors.type ?\n                                    <p>{this.state.errors.type.message}</p> :\n                                    \"\"\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Description:</label>\n                            <input type=\"text\" className=\"form-control\" onChange={this.change.bind(this, \"description\")} value={this.state.pet.description}/>\n                            {\n                                this.state.errors.description ?\n                                    <p>{this.state.errors.description.message}</p> :\n                                    \"\"\n                            }\n                        </div>\n                        <div>\n                            <label>Skills:</label>\n                            <div className=\"form-group\">\n                                <p>Skill 1:</p>\n                                <input type=\"text\" onChange={this.change.bind(this, \"skillOne\")} value={this.state.pet.skillOne}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <p>Skill 2:</p>\n                                <input type=\"text\" onChange={this.change.bind(this, \"skillTwo\")} value={this.state.pet.skillTwo}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <p>Skill 3:</p>\n                                <input type=\"text\" onChange={this.change.bind(this, \"skillThree\")} value={this.state.pet.skillThree}/>\n                            </div>\n                        </div>\n                        <input type=\"submit\" className=\"btn btn-success mr-3\" />\n                        <Link to={\"/\"} className=\"btn btn-danger\">Cancel</Link>\n                    </form>\n                </div>\n             </div>\n         )\n     }\n }\n \n export default Edit\n ","import React, { Component } from 'react';\nimport { BrowserRouter, Route} from \"react-router-dom\";\nimport Dashboard from './components/Dashboard';\nimport Form from './components/Form';\nimport Display from './components/Display';\nimport Edit from './components/Edit';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/new\" component={Form} />\n          <Route exact path=\"/pet/:_id\" component={Display} />\n          <Route path=\"/pet/:_id/edit\" component={Edit} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}